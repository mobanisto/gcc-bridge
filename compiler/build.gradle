if (project.hasProperty("topobyte")) {
    apply from: 'file:///' + System.getProperty("user.home") \
        + '/.gradle/topobyte.gradle'
}

dependencies {
    compile project(':gcc-bridge-runtime')
    compile 'org.renjin:renjin-guava:28.0b'
    compile 'org.renjin:renjin-asm:5.0.4b'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.11.1'
    implementation 'io.airlift:airline:0.8'

    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

class PluginCompileTask extends Exec {

    @Input
    String gcc;

    @Input
    String sourceFile;

    @Input
    String pluginFile;

    void setup() {
        inputs.file sourceFile
        outputs.file pluginFile

        def gccFound = false;
        try {
            Runtime rt = Runtime.getRuntime();
            Process proc = rt.exec("${gcc} -v");
            proc.waitFor();
            gccFound = true;
        } catch (IOException e) {
            // do nothing
        }

        if (gccFound) {
            commandLine 'sh', '-c', "${gcc} -shared -xc++ -I \
                `${gcc} -print-file-name=plugin`/include -fPIC -fno-rtti -O2 ${sourceFile} \
                -lstdc++ -shared-libgcc -o ${pluginFile}"
        } else {
            commandLine 'echo', "ignoring ${gcc}"
        }
    }

}

task compilePlugin_4_7(type: PluginCompileTask) {
    gcc = 'gcc-4.7'
    sourceFile = 'src/main/resources/org/renjin/gcc/plugin-4.7.c'
    pluginFile = gccBridgePlugin_4_7

    setup()
}

task compilePlugin_4_8(type: PluginCompileTask) {
    gcc = 'gcc-4.8'
    sourceFile = 'src/main/resources/org/renjin/gcc/plugin-4.8.c'
    pluginFile = gccBridgePlugin_4_8

    setup()
}

task compilePlugin_7(type: PluginCompileTask) {
    gcc = 'gcc-7'
    sourceFile = 'src/main/resources/org/renjin/gcc/plugin-7.c'
    pluginFile = gccBridgePlugin_7

    setup()
}

task compilePlugin {
    dependsOn(compilePlugin_4_7);
    dependsOn(compilePlugin_4_8);
    dependsOn(compilePlugin_7);
}